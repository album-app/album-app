variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - venv/
    - .m2/repository
    - download/
    - Gradle/

stages:
  - build
  - test
  - deploy

.windows_base_template:
  before_script:
    - if(-Not (Test-Path .\download)) {New-Item -ItemType Directory -Force -Path .\download}
    - if(-Not (Test-Path .\download\jdk16.zip)) {Invoke-WebRequest -UseBasicParsing -Uri "https://github.com/adoptium/temurin16-binaries/releases/download/jdk-16.0.2%2B7/OpenJDK16U-jdk_x64_windows_hotspot_16.0.2_7.zip" -OutFile .\download\jdk16.zip}
    - Expand-Archive -Path ".\download\jdk16.zip" -DestinationPath "C:\JDK16"
    - $env:JAVA_HOME="C:\JDK16\jdk-16.0.2+7"
#    - if(-Not (Test-Path .\download\gradle-7.2-bin.zip)) {Invoke-WebRequest -UseBasicParsing -Uri "https://services.gradle.org/distributions/gradle-7.2-bin.zip" -OutFile .\download\gradle-7.2-bin.zip}
#    - if(-Not (Test-Path .\Gradle)) {Expand-Archive -Path ".\download\gradle-7.2-bin.zip" -DestinationPath ".\Gradle"}
  tags:
    - windows

.macos_base_template:
  before_script:
    - echo "$(uname)"
    - sw_vers
    - tmpdir=$(mktemp -d /tmp/album-app-test.XXXXXX)
    - echo $tmpdir
    - echo $tmpdir > /tmp/tmpdir
    - curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh --output $tmpdir/miniconda.sh
    - bash $tmpdir/miniconda.sh -b -p $tmpdir/miniconda
    - export PATH=$PATH:$tmpdir/miniconda/bin/
    - echo $PATH
    - conda create --name album-app
    - source $tmpdir/miniconda/bin/activate
    - conda activate album-app
    - conda install openjdk=11.0.6
    - curl -k -L -v -X GET https://services.gradle.org/distributions/gradle-6.8.3-bin.zip > $tmpdir/gradle-6.8.3-bin.zip
    - unzip -d $tmpdir/gradle $tmpdir/gradle-6.8.3-bin.zip
    - ls $tmpdir/gradle/gradle-6.8.3
  tags:
    - macos
    - shell

.linux_base_template:
  image: gradle:7.2-jdk16

windows_test:
  extends: .windows_base_template
  stage: test
  script:
    - powershell -NonInteractive -command {.\gradlew clean test --no-daemon}

windows_deploy:
  extends: .windows_base_template
  stage: deploy
  script:
    - dir
    - powershell -NonInteractive -command {.\gradlew jlinkZip --no-daemon}
#    - $cmnd = powershell -NonInteractive -command {.\Gradle\gradle-7.2\bin\gradle jlinkZip --no-daemon 2>&1 | Write-Host; .\Gradle\gradle-7.2\bin\gradle -PjpackageInstallerType="exe" -PjpackageIcon="icon.ico" jpackage --no-daemon 2>&1 | Write-Host; .\Gradle\gradle-7.2\bin\gradle -PjpackageInstallerType="msi" -PjpackageIcon="icon.ico" jpackage --no-daemon 2>&1 | Write-Host; exit(0)}
#    - if ("Success" -in $cmnd[-2..-1]) {exit(0)} else {exit(1)}
  artifacts:
    paths:
      - build/image.zip
      - build/jpackage/*.exe
      - build/jpackage/*.msi


.macos_test:
  extends: .macos_base_template
  stage: test
  script:
    - $tmpdir/gradle/gradle-7.2/bin/gradle clean test

.macos_deploy:
  extends: .macos_base_template
  stage: deploy
  script:
    - $tmpdir/gradle/gradle-7.2/bin/gradle jlinkZip
#    - $tmpdir/gradle/gradle-7.2/bin/gradle -PjpackageInstallerType="pkg" jpackage
#    - $tmpdir/gradle/gradle-7.2/bin/gradle -PjpackageInstallerType="dmg" jpackage
  artifacts:
    paths:
      - build/image.zip

ubuntu_test:
  extends: .linux_base_template
  stage: test
  script:
    - gradle clean test

ubuntu_deploy:
  extends: .linux_base_template
  stage: deploy
  script:
#    - sudo apt-get install binutils fakeroot
    - gradle jlinkZip
#    - gradle -PjpackageInstallerType="deb" jpackage
  artifacts:
    paths:
      - build/image.zip
#      - build/jpackage/*.deb
